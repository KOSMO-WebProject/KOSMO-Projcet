import React, { useEffect, useState } from 'react';
import './NoticeList.css';
import axios from 'axios';
import Footer from '../../components/includes/Footer';
import NoticeItem from './NoticeItem';
import Header from '../../components/includes/Header';
import { useNavigate } from 'react-router';
import { useSelector } from 'react-redux';

const NoticeList = () => {
  const { currentUser } = useSelector((state) => state.auth);
  const nav = useNavigate();
  const [gubun, setGubun] = useState('');
  const [keyword, setKeyword] = useState('');
  const [notices, setNotices] = useState([]);
  const [searchVisible, setSearchVisible] = useState(false);

  const noticeList = async () => {
    try {
      const response = await axios.get('/notices', {
        params: { gubun, keyword }
      });
      setNotices(response.data);
    } catch (error) {
      console.error('Error fetching notices:', error);
    }
  };

  useEffect(() => {
    noticeList();
  }, [gubun, keyword]);

  const handleGubun = (event) => setGubun(event.target.value);
  const handleKeyword = (event) => setKeyword(event.target.value);

  const onClickMove = () => {
    if (currentUser) {
      nav('/notice/write');
    } else {
      alert('회원가입이 필요합니다.');
    }
  };

  const toggleSearch = () => setSearchVisible(!searchVisible);

  return (
    <>
      <Header />
      <div className="new-container">
        <div className="page-header">
          <h2>공지사항 <small>글목록</small></h2>
          <hr />
        </div>
      </div>

      <div className="button-group">
        <button className="btn btn-warning" onClick={noticeList}>전체조회</button>
        <button className="btn btn-success" onClick={onClickMove}>글쓰기</button>
        <div className="search-toggle">
          <button className="btn btn-secondary" onClick={toggleSearch}>
            <i className="bi bi-search"></i> 검색
          </button>
        </div>
      </div>

      {searchVisible && (
        <div className="search-row" style={{ marginTop: '10px' }}>
          <select className="form-select" value={gubun} onChange={handleGubun}>
            <option value="">분류선택</option>
            <option value="n_title">제목</option>
            <option value="n_writer">작성자</option>
            <option value="n_content">내용</option>
          </select>
          <input
            type="text"
            className="form-control"
            placeholder="검색어를 입력하세요"
            value={keyword}
            onChange={handleKeyword}
          />
          <button type="button" className="btn btn-danger" onClick={noticeList}>
            검색
          </button>
        </div>
      )}

      <div className="search-visible">
        <table className="table table-hover">
          <thead>
            <tr>
              <th>#</th>
              <th>제목</th>
              <th>작성자</th>
              <th>작성날짜</th>
            </tr>
          </thead>
          <tbody>
            {notices && notices.map((notice) => (
              <NoticeItem key={notice.id} notice={notice} />
            ))}
          </tbody>
        </table>
      </div>

      <Footer />
    </>
  );
};

export default NoticeList;
